
# 17. Условный оператор if. Конструкция if-else
# (https://www.youtube.com/watch?v=jBP8RY2-m74&list=PLA0M1Bcd0w8yWHh2V70bTtbVxJICrnJHd&index=17)

# Инструкция if применяется для создания управляющей структуры, которая позволяет иметь в программе более одного пути исполнения. Инструкция i f исполняет одну или несколько инструкций, только когда булево выражение является истинным.

# Инструкция if-else исполняет один блок инструкций, если ее условие является истин­ным, либо другой блок, если ее условие является ложным.


# 18. Вложенные условия и множественный выбор. Конструкция if-elif-else
# (https://www.youtube.com/watch?v=7L-wetlrCi0&list=PLA0M1Bcd0w8yWHh2V70bTtbVxJICrnJHd&index=18)

# item = int(input())

# if item == 1:
#     print("выбран курс по Пайтон")
# elif item == 2:
#     print("выбран курс по C++")
# elif item == 3:
#     print("выбран курс по Java")
# elif item == 4:
#     print("выбран курс по JavaScript")
# else:
#     print("неверный пункт")


# 19. Тернарный условный оператор. Вложенное тернарное условие
# (https://www.youtube.com/watch?v=SotePVO6_Fk&list=PLA0M1Bcd0w8yWHh2V70bTtbVxJICrnJHd&index=19)

# <значение_если_истина> if <условие> else <значение_если_ложь>

# Как это работает:
# Сначала проверяется <условие>.
# Если условие истинно (True), возвращается <значение_если_истина>.
# Если ложно (False), возвращается <значение_если_ложь>.

# age = 20
# status = "Взрослый" if age >= 18 else "Ребёнок"
# print(status)  # Выведет: Взрослый


# 20. Оператор цикла while
# (https://www.youtube.com/watch?v=5BRzUFyOWYI&list=PLA0M1Bcd0w8yWHh2V70bTtbVxJICrnJHd&index=20)

# Общий формат:
# while <условие цикла>:
#     оператор1
#     оператор2
#     ...
#     операторN

# N = 100
# s = 0
# i = 1

# while i <= N:
#     s += i
#     i += 1
# print(s)  # 1050


# 21. ОПЕРАТОРЫ циклов break, continue и else
# (https://www.youtube.com/watch?v=y35dyh7cbXY&list=PLA0M1Bcd0w8yWHh2V70bTtbVxJICrnJHd&index=21)

# break - досрочное завершение цикла

# d = [1, 5, 3, 6, 0, -4]

# flFind = False
# i = 0
# while i < len(d):
#     flFind = d[i] % 2 == 0
#     if flFind:
#         print(d[i])
#         break

#     i += 1
# print(flFind)
# # 6
# # True


# continue - пропуск одной итерации цикла

# НАПРИМЕР: требуется суммировать все нечетные значения которые будет вводить пользователь. Как только будет введен 0 программа должна прекратить свою работу.

# s = 0
# d = 1

# while d != 0:
#     d = int(input("введите целое число: "))
#     if d % 2 == 0:
#         continue

#     s += d
#     print(f"Сумма нечетных значений равна {s}")


# ОПЕРАТОР else цикла while выполняется тогда и только тогда, когда происходит нормаль­ный выход из цикла (т.е. без выполнения оператора break).

# Общий формат:
# while <условие цикла>:
#     оператор1
#     оператор2
#     ...
#     операторN
# else:
# блок операторов
# после завершения
# цикла

# НАПРИМЕР:

# # s = 1/2 + 1/3 + 1/4 + ... + 1/0

# s = 0
# i = -10

# while i < 100:
#     if i == 0:
#         break
#     s += 1/i
#     i += 1
# else:
#     print("сумма вычислена корректно")

# print(s)  # -2.9289682539682538
# # блок else был пропущен, выход произошел по break
# ----------------------------------------

# поменяем условие while:
# while i < 0:
#     if i == 0:
#         break
#     s += 1/i
#     i += 1
# else:
#     print("сумма вычислена корректно")

# print(s)  # (теперь условие while выполнилось полностью и дальнейшее выполнение было передано else, и дальше на принт)
# # сумма вычислена корректно
# # -2.9289682539682538

